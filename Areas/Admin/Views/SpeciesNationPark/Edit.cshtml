@using System.Security.Claims;
@using DongThucVatQuangTri.Applications.AnimalsAndPlant.SpeciesNationParkManage.Dtos;
@model UpdateSpeciesNationParkRequest
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Sửa loài";
    Layout = "~/Areas/Admin/Views/Shared/LayoutAdmin.cshtml";
}

@{
    var idLoai = -1;
    if (string.Equals(ViewBag.Loai, "Động Vật", StringComparison.CurrentCultureIgnoreCase))
    {
        idLoai = 1;
    }
    if (string.Equals(ViewBag.Loai, "Thực Vật", StringComparison.CurrentCultureIgnoreCase))
    {
        idLoai = 0;
    }
}
@section Scripts{
    <script src="/admin/assets/ckeditor/ckeditor.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <script src="https://cdn.jsdelivr.net/npm/leaflet-easyprint@2.1.9/dist/bundle.min.js"></script>
    <script type="text/javascript" src="/dataMaps/newMap/js/dist/Leaflet.Coordinates-0.1.5.min.js"></script>
    <script type="text/javascript" src="/dataMaps/newMap/js/dist/leaflet.groupedlayercontrol.js"></script>
    <link rel="stylesheet" href="/dataMaps/newMap/js/dist/Leaflet.Coordinates-0.1.5.css" />
    <link rel="stylesheet" href="/dataMaps/newMap/js/dist/leaflet.groupedlayercontrol.css" />
    <script>
        CKEDITOR.replace('editor');
    </script>
    @if (User.FindFirstValue(ClaimTypes.Role) == "NationParkMuongTe")
    {
        <script src="/dataMaps/newMap/data/muongte_rrx_wgs84.js"></script>

        <script>
            // Creating map options
            var mapOptions = {
                center: [22.481854, 102.616594],
                zoom: 10,
                attributionControl: false
            }
            var map = new L.map('map', mapOptions);    // Creating a map object
            var basemaps = {

                GoogleStreets: L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
                    maxZoom: 20,
                    subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
                }),
                GoogleHybrid: L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {
                    maxZoom: 20,
                    subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
                }),
                GoogleSatellite: L.tileLayer('http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
                    maxZoom: 20,
                    subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
                }),
                GoogleTerrain: L.tileLayer('http://{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}', {
                    maxZoom: 20,
                    subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
                }),
                OpenMapStreets: L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'),

            };

            L.control.layers(basemaps).addTo(map);
            basemaps.GoogleHybrid.addTo(map);
            var popup = L.popup();
            var mtData = L.geoJson(muongtedatarrx).addTo(map); // Add geojson rrxa muong te
            if ('@String.IsNullOrEmpty(Model.KinhDo)' == "True" || '@String.IsNullOrEmpty(Model.ViDo).ToString()' == 'True') {
                
                var marker;
               @*  // Creating a Layer object
                var layer = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');
                map.addLayer(layer); *@
            }
            else {
                var planes = [
                    [@Model.ViDo, @Model.KinhDo],
                ];

              @*   L.map('map').setView([@Model.ViDo, @Model.KinhDo], 8);
                mapLink =
                    '<a href="http://openstreetmap.org">OpenStreetMap</a>';
                L.tileLayer(
                    'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; ' + mapLink + ' Contributors',
                    maxZoom: 18,
                }).addTo(map); *@
                for (var i = 0; i < planes.length; i++) {
                    marker = new L.marker([planes[i][0], planes[i][1]])
                        .addTo(map);
                }
            }
          
            /*===================================================
                            Attribution options
            ===================================================*/
            var attrOptions = {
                prefix: 'Creater: Cường nv'
            };

            var attr = L.control.attribution(attrOptions);
            var scale = L.control.scale(); // Creating scale control
            //L.geoJson(muongte_rgxa).addTo(map)
            scale.addTo(map); // Adding scale control to the map
            attr.addTo(map);  // Adding attribution to the map
            // L.Control.geocoder().addTo(map); // Add search to maps
            // Add coornidates
            L.control.coordinates({
                position: "bottomright", //optional default "bootomright"
                decimals: 2, //optional default 4
                decimalSeperator: ".", //optional default "."
                labelTemplateLat: "Latitude: {y}", //optional default "Lat: {y}"
                labelTemplateLng: "Longitude: {x}", //optional default "Lng: {x}"
                enableUserInput: true, //optional default true
                useDMS: false, //optional default false
                useLatLngOrder: true, //ordering of labels, default false-> lng-lat
                markerType: L.marker, //optional default L.marker
                markerProps: {}, //optional default {},
                labelFormatterLng: function (lng) { return lng + " lng" }, //optional default none,
                labelFormatterLat: function (lat) { return lat + " lat" }, //optional default none
                //customLabelFcn: function(latLonObj, opts) { "Geohash: " + encodeGeoHash(latLonObj.lat, latLonObj.lng)} //optional default none
            }).addTo(map);

            var marker;
            // Creating a Layer object
            @* var layer = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');
            map.addLayer(layer); // Adding layer to the map *@
            map.on("click", function (e) {
                console.log(marker)
                if (marker) {
                    console.log(marker)
                    map.removeLayer(marker); // Xóa marker cũ nếu đã có
                }
                marker = L.marker([e.latlng.lat, e.latlng.lng]).addTo(map);

                $("input[name='KinhDo']").val(e.latlng.lng)
                $("input[name='ViDo']").val(e.latlng.lat)
            })
        </script>
    }
    else if (User.FindFirstValue(ClaimTypes.Role) == "NationParkNamGiang")
    {
        <script src="/dataMaps/newMap/data/NamGiang_rrx.js"></script>
        <script>
            var mapOptions = {
                center: [15.602519, 107.619380],
                zoom: 11,
                attributionControl: false
            }
            var map = new L.map('map', mapOptions);    // Creating a map object
            var basemaps = {

                GoogleStreets: L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
                    maxZoom: 20,
                    subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
                }),
                GoogleHybrid: L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {
                    maxZoom: 20,
                    subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
                }),
                GoogleSatellite: L.tileLayer('http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
                    maxZoom: 20,
                    subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
                }),
                GoogleTerrain: L.tileLayer('http://{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}', {
                    maxZoom: 20,
                    subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
                }),
                OpenMapStreets: L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'),

            };

            L.control.layers(basemaps).addTo(map);
            basemaps.GoogleHybrid.addTo(map);
            var popup = L.popup();
            var mtData = L.geoJson(namgiang_rrx).addTo(map); // Add geojson rrxa muong te
            if ('@String.IsNullOrEmpty(Model.KinhDo)' == "True" || '@String.IsNullOrEmpty(Model.ViDo).ToString()' == 'True') {

                var marker;
          
                        }
            else {
                var planes = [
                    [@Model.ViDo, @Model.KinhDo],
                ];

           
                            for (var i = 0; i < planes.length; i++) {
                    marker = new L.marker([planes[i][0], planes[i][1]])
                        .addTo(map);
                }
            }

            /*===================================================
                            Attribution options
            ===================================================*/
            var attrOptions = {
                prefix: 'Creater: Cường nv'
            };

            var attr = L.control.attribution(attrOptions);
            var scale = L.control.scale(); // Creating scale control
            //L.geoJson(muongte_rgxa).addTo(map)
            scale.addTo(map); // Adding scale control to the map
            attr.addTo(map);  // Adding attribution to the map
            // L.Control.geocoder().addTo(map); // Add search to maps
            // Add coornidates
            L.control.coordinates({
                position: "bottomright", //optional default "bootomright"
                decimals: 2, //optional default 4
                decimalSeperator: ".", //optional default "."
                labelTemplateLat: "Latitude: {y}", //optional default "Lat: {y}"
                labelTemplateLng: "Longitude: {x}", //optional default "Lng: {x}"
                enableUserInput: true, //optional default true
                useDMS: false, //optional default false
                useLatLngOrder: true, //ordering of labels, default false-> lng-lat
                markerType: L.marker, //optional default L.marker
                markerProps: {}, //optional default {},
                labelFormatterLng: function (lng) { return lng + " lng" }, //optional default none,
                labelFormatterLat: function (lat) { return lat + " lat" }, //optional default none
                //customLabelFcn: function(latLonObj, opts) { "Geohash: " + encodeGeoHash(latLonObj.lat, latLonObj.lng)} //optional default none
            }).addTo(map);





            var marker;
            // Creating a Layer object
            var layer = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');
            map.addLayer(layer); // Adding layer to the map
            map.on("click", function (e) {
                console.log(marker)
                if (marker) {
                    console.log(marker)
                    map.removeLayer(marker); // Xóa marker cũ nếu đã có
                }
                marker = L.marker([e.latlng.lat, e.latlng.lng]).addTo(map);

                $("input[name='KinhDo']").val(e.latlng.lng)
                $("input[name='ViDo']").val(e.latlng.lat)
            })
        </script>
    }
    else
    {
        <script src="/dataMaps/newMap/data/muongte_rrx_wgs84.js"></script>
        <script src="/dataMaps/newMap/data/NamGiang_rrx.js"></script>
        <script>
            // Creating map options
            var mapOptions = {
                center: [17.08199033811567, 107.048198306605],
                zoom: 5,
                attributionControl: false
            }

            var map = new L.map('map', mapOptions);    // Creating a map object

            var basemaps = {

                GoogleStreets: L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
                    maxZoom: 20,
                    subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
                }),
                GoogleHybrid: L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {
                    maxZoom: 20,
                    subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
                }),
                GoogleSatellite: L.tileLayer('http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
                    maxZoom: 20,
                    subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
                }),
                GoogleTerrain: L.tileLayer('http://{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}', {
                    maxZoom: 20,
                    subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
                }),
                OpenMapStreets: L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'),

            };

            L.control.layers(basemaps).addTo(map);
            basemaps.GoogleHybrid.addTo(map);
            var popup = L.popup();
            var mtData = L.geoJson(namgiang_rrx).addTo(map); // Add geojson rrxa muong te
            var mtData2 = L.geoJson(muongtedatarrx).addTo(map); // Add geojson rrxa muong te


            if ('@String.IsNullOrEmpty(Model.KinhDo)' == "True" || '@String.IsNullOrEmpty(Model.ViDo).ToString()' == 'True') {

                var marker;

            }
            else {
                var planes = [
                    [@Model.ViDo, @Model.KinhDo],
                ];


                for (var i = 0; i < planes.length; i++) {
                    marker = new L.marker([planes[i][0], planes[i][1]])
                        .addTo(map);
                }
            }
            /*===================================================
                            Attribution options
            ===================================================*/
            var attrOptions = {
                prefix: 'Creater: Cường nv'
            };

            var attr = L.control.attribution(attrOptions);
            var scale = L.control.scale(); // Creating scale control
            //L.geoJson(muongte_rgxa).addTo(map)
            scale.addTo(map); // Adding scale control to the map
            attr.addTo(map);  // Adding attribution to the map
            // L.Control.geocoder().addTo(map); // Add search to maps
            // Add coornidates
            L.control.coordinates({
                position: "bottomright", //optional default "bootomright"
                decimals: 2, //optional default 4
                decimalSeperator: ".", //optional default "."
                labelTemplateLat: "Latitude: {y}", //optional default "Lat: {y}"
                labelTemplateLng: "Longitude: {x}", //optional default "Lng: {x}"
                enableUserInput: true, //optional default true
                useDMS: false, //optional default false
                useLatLngOrder: true, //ordering of labels, default false-> lng-lat
                markerType: L.marker, //optional default L.marker
                markerProps: {}, //optional default {},
                labelFormatterLng: function (lng) { return lng + " lng" }, //optional default none,
                labelFormatterLat: function (lat) { return lat + " lat" }, //optional default none
                //customLabelFcn: function(latLonObj, opts) { "Geohash: " + encodeGeoHash(latLonObj.lat, latLonObj.lng)} //optional default none
            }).addTo(map);





            var marker;
            // Creating a Layer object
            var layer = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');
            map.addLayer(layer); // Adding layer to the map
            map.on("click", function (e) {
                console.log(marker)
                if (marker) {
                    console.log(marker)
                    map.removeLayer(marker); // Xóa marker cũ nếu đã có
                }
                marker = L.marker([e.latlng.lat, e.latlng.lng]).addTo(map);

                $("input[name='KinhDo']").val(e.latlng.lng)
                $("input[name='ViDo']").val(e.latlng.lat)
            })
        </script>
    }
   @*  <script>
        var marker;
        if ('@String.IsNullOrEmpty(Model.KinhDo)'=="True" ||'@String.IsNullOrEmpty(Model.ViDo).ToString()'=='True') {
            var mapOptions = {
                center: [21.809870820489394, 105.4755813202779],
                zoom: 7
            }
            var map = new L.map('map', mapOptions);    // Creating a map object
            var marker;
            // Creating a Layer object
            var layer = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');
            map.addLayer(layer);
        }
        else {
            var planes = [
                [@Model.ViDo, @Model.KinhDo],
            ];

            var map = L.map('map').setView([@Model.ViDo, @Model.KinhDo], 8);
            mapLink =
                '<a href="http://openstreetmap.org">OpenStreetMap</a>';
            L.tileLayer(
                'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; ' + mapLink + ' Contributors',
                maxZoom: 18,
            }).addTo(map);
            for (var i = 0; i < planes.length; i++) {
                marker = new L.marker([planes[i][0], planes[i][1]])
                    .addTo(map);
            }
        }
        map.on("click", function (e) {
            console.log(marker)
            if (marker) {
                map.removeLayer(marker); // Xóa marker cũ nếu đã có
            }
            marker = L.marker([e.latlng.lat, e.latlng.lng]).addTo(map);

            $("input[name='KinhDo']").val(e.latlng.lng)
            $("input[name='ViDo']").val(e.latlng.lat)
        })
    </script> *@
    <script>
        zoomMap();
        function zoomMap() {
            var select = document.querySelector(".typeNationPark")
            var value = select.value;
            if (value == "NationParkNamGiang") {

                map.flyTo([15.602519, 107.619380], 9, {
                    duration: 2 // Thời gian di chuyển (s)
                });
            } else {

                map.flyTo([22.481854, 102.616594], 9, {
                    duration: 2 // Thời gian di chuyển (s)
                });
            }
        }
    </script>
}
<div class="container-fluid px-4">
    <h1 class="mt-4">Sửa loài @ViewBag.Loai vườn quốc gia</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">Trang chủ</a></li>
        <li class="breadcrumb-item active">Sửa loài @ViewBag.Loai vườn quốc gia</li>
    </ol>
    <div style="margin: 20px 0;">
        <a class="btn btn-success" asp-action="Index" asp-route-loai="@idLoai"><i class="fa-solid fa-list" style="color: #ffffff;"></i> Danh sách loài vườn quốc gia</a>
    </div>
    <div class="row">
        <form asp-action="Edit" asp-route-loai="@idLoai" enctype="multipart/form-data">

            <div class="row">
                <div class="col-md-6">
                    <input type="hidden" asp-for="Id" class="form-control" />
                    <div class="form-group">
                        <label asp-for="IdDtvLoai" class="control-label">Loài:</label>
                        <select asp-for="IdDtvLoai" name="IdDtvLoai" asp-items="@ViewBag.Categories" class="form-control select2">
                        </select>
                    </div>

                    <div class="form-group">
                        <label asp-for="TenKhac" class="control-label">Tên khác:</label>
                        <input asp-for="TenKhac" class="form-control" />
                        <span asp-validation-for="TenKhac" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="PhanBo" class="control-label">Vùng phân bố:</label>
                        <input asp-for="PhanBo" class="form-control" />
                        <span asp-validation-for="PhanBo" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="NguonTaiLieu" class="control-label">Nguồn tài liệu:</label>
                        <input asp-for="NguonTaiLieu" class="form-control" />
                        <span asp-validation-for="NguonTaiLieu" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Status" class="control-label">Trạng thái: </label>
                        <select asp-for="Status" class="form-control" id="dropdown" name="Status">
                            <option value="1">Bật</option>
                            <option value="0">Tắt</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label asp-for="TypeNationPark" class="control-label">Rừng phòng hộ: </label>
                        <select onchange="zoomMap()" asp-for="TypeNationPark" class="form-control typeNationPark" id="dropdown" name="TypeNationPark">
                            @{
                                var typeNationPark = User.FindFirstValue(ClaimTypes.Role);
                            }
                            @if (typeNationPark == "NationParkNamGiang")
                            {
                                <option value="NationParkNamGiang">RPH Nam Giang</option>
                            }
                            else if (typeNationPark == "NationParkMuongTe")
                            {
                                <option value="NationParkMuongTe">RPH Mường Tè</option>
                            }
                            else
                            {
                                <option value="NationParkNamGiang">RPH Nam Giang</option>
                                <option value="NationParkMuongTe">RPH Mường Tè</option>
                            }

                        </select>
                    </div>
                    <div class="form-group">
                        <label asp-for="FileDinhKem" class="control-label">Ảnh đính kèm:</label>
                        <input type="file" multiple asp-for="FileDinhKem" class="form-control" />
                        <span asp-validation-for="FileDinhKem" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="GiaTriSuDung" class="control-label">Công dụng/ Giá trị sử dụng:</label>
                        <textarea placeholder="Tối đa 255 kí tự" style="height:100px;" maxlength="255" asp-for="GiaTriSuDung" class="form-control"></textarea>
                        <span asp-validation-for="GiaTriSuDung" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="DacDiem" class="control-label">Đặc điểm hình thái, sinh thái:</label>
                        <textarea asp-for="DacDiem" id="editor" class="form-control"></textarea>
                        <span asp-validation-for="DacDiem" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="HinhAnh" class="control-label" style="display:block">Hình ảnh:</label>
                        @{
                            List<string> ListUrl = new List<string>();
                            @if (Model != null)
                            {
                                if (!String.IsNullOrEmpty(Model.HinhAnh))
                                {
                                    ListUrl = (@Model.HinhAnh.Split(",")).ToList();
                                }
                                else
                                {
                                    ListUrl = null;
                                }
                            }
                            else
                            {
                                ListUrl = null;
                            }
                        }
                        @if (ListUrl != null)
                        {
                            @foreach (var Url in ListUrl)
                            {
                                @if (!String.IsNullOrEmpty(Url))
                                {
                                    <img style="height: 200px;width:200px;" src="/user-content/@Url" alt="..." class="img-thumbnail">
                                }
                            }
                            <div class="form-check  ">
                                <input asp-for="isDelete" class="form-check-input" type="checkbox" id="defaultCheck1">
                                <label class="form-check-label" for="defaultCheck1">
                                    Xóa ảnh
                                </label>
                            </div>
                        }
                        else
                        {
                            <img style="height: 200px;width:200px;display:block;" src="/admin/assets/img/no-image-available-icon-flat-vector-25898826.jpg" alt="..." class="img-thumbnail">
                        }


                    </div>
                    <div class="form-group row">
                        <div class="col-md-6">
                            <label asp-for="KinhDo" class="control-label">Kinh độ:</label>
                            <input asp-for="KinhDo" class="form-control" name="KinhDo" />
                        </div>
                        <div class="col-md-6">
                            <label asp-for="ViDo" class="control-label">Vĩ độ:</label>
                            <input asp-for="ViDo" class="form-control" name="ViDo" />
                        </div>
                    </div>
                    <div>
                        <label class="control-label">Bản đồ:</label>
                        <div id="map" style="width: 100%; height: 400px"></div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group mt-2">
                    <input type="hidden" asp-for="UpdatedBy" value="@User.FindFirst(ClaimTypes.NameIdentifier).Value" />
                    <button type="submit" class="btn btn-primary"><i class="fa-regular fa-floppy-disk" style="color: #ffffff;"></i> Lưu</button>
                    <a asp-action="Index" class="btn btn-secondary" asp-route-loai="@idLoai"><i class="fa-solid fa-xmark" style="color: #ffffff;"></i> Hủy</a>


                </div>
            </div>
        </form>
    </div>
</div>
