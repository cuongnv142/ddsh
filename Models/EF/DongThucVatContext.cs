// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using DongThucVatQuangTri.Models.Entities;
using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DongThucVatQuangTri.Models.EF
{
    public partial class DongThucVatContext : IdentityDbContext<AppUser,AppRoles,Guid>
    {
        public DongThucVatContext()
        {
        }
        public DongThucVatContext(DbContextOptions options) : base(options)
        {

        }
        //public DongThucVatContext(DbContextOptions<DongThucVatContext> options)
        //    : base(options)
        //{
        //}

        public DbSet<ConservationArea> conservationAreas { get; set; }
        public DbSet<ConservationInfor> conservationInfors { get; set; }
        public DbSet<EcotourismSafety> ecotourismSafeties { get; set; }
        public DbSet<GroupUser> groupUsers { get; set; }
        public DbSet<tourCat> tourCats { get; set; }
        public DbSet<Contact> contacts { get; set; }
        public DbSet<AppUser> appUsers { get; set; }
        public DbSet<AppRoles> appRoles { get; set; }
        public DbSet<Role> Role { get; set; }
        public DbSet<introduce> introduce { get; set; }
        public DbSet<AppSettings> appsetting { get; set; }
        public virtual DbSet<Tour> tour { get; set; }
        public virtual DbSet<Map> map { get; set; }
        public virtual DbSet<Banner> Banner { get; set; }
        public virtual DbSet<BannerCat> BannerCat { get; set; }
        public virtual DbSet<DtvBo> DtvBo { get; set; }
        public virtual DbSet<DtvHo> DtvHo { get; set; }
        public virtual DbSet<DtvLoai> DtvLoai { get; set; }
        public virtual DbSet<DtvLoai_VQG> DtvLoai_VQGs { get; set; }
        public virtual DbSet<DtvLop> DtvLop { get; set; }
        public virtual DbSet<DtvNganh> DtvNganh { get; set; }

        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<NewsCat> NewsCat { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<IdentityUserClaim<Guid>>().ToTable("AppUserClaims");
            modelBuilder.Entity<IdentityUserRole<Guid>>().ToTable("AppUserRoles").HasKey(x => new { x.RoleId, x.UserId });
            modelBuilder.Entity<IdentityUserLogin<Guid>>().ToTable("AppUserLogins").HasKey(x => x.UserId);
            modelBuilder.Entity<IdentityRoleClaim<Guid>>().ToTable("AppRoleClaims");
            modelBuilder.Entity<IdentityUserToken<Guid>>().ToTable("AppUserTokens").HasKey(x => x.UserId);

            modelBuilder.Entity<Banner>(entity =>
            {
                entity.ToTable("banner", "dongthucvat");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.BannerCatId).HasColumnName("banner_cat_id");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.Description).HasColumnName("description");

                entity.Property(e => e.Height)
                    .HasColumnName("height")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IdRelated).HasColumnName("id_related");

                entity.Property(e => e.Language)
                    .HasMaxLength(50)
                    .HasColumnName("language");

                entity.Property(e => e.Link)
                    .HasMaxLength(500)
                    .HasColumnName("link");

                entity.Property(e => e.Multitext).HasColumnName("multitext");

                entity.Property(e => e.Name)
                    .HasMaxLength(300)
                    .HasColumnName("name");

                entity.Property(e => e.SortOrder)
                    .HasColumnName("sort_order")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Src)
                    .HasMaxLength(255)
                    .HasColumnName("src");

                entity.Property(e => e.SrcMobile)
                    .HasMaxLength(255)
                    .HasColumnName("src_mobile");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Type)
                    .HasColumnName("type")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");

                entity.Property(e => e.Width)
                    .HasColumnName("width")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<BannerCat>(entity =>
            {
                entity.ToTable("banner_cat", "dongthucvat");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Description).HasColumnName("description");

                entity.Property(e => e.IdRelated).HasColumnName("id_related");

                entity.Property(e => e.Image)
                    .HasMaxLength(255)
                    .HasColumnName("image");

                entity.Property(e => e.Language)
                    .HasMaxLength(50)
                    .HasColumnName("language");

                entity.Property(e => e.Level).HasColumnName("level");

                entity.Property(e => e.Name)
                    .HasMaxLength(300)
                    .HasColumnName("name");

                entity.Property(e => e.ParentId).HasColumnName("parent_id");

                entity.Property(e => e.Path)
                    .HasMaxLength(100)
                    .HasColumnName("path");

                entity.Property(e => e.SortOrder).HasColumnName("sort_order");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at")
                    .HasDefaultValueSql("(getdate())");
            });

           



            modelBuilder.Entity<DtvBo>(entity =>
            {
                entity.ToTable("dtv_bo", "dongthucvat");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedBy).HasColumnName("created_by");

                entity.Property(e => e.IdDtvLop).HasColumnName("id_dtv_lop");

                entity.Property(e => e.Loai).HasColumnName("loai");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("name");

                entity.Property(e => e.NameLatinh)
                    .HasMaxLength(255)
                    .HasColumnName("name_latinh");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");

                entity.Property(e => e.UpdatedBy).HasColumnName("updated_by");
            });

            modelBuilder.Entity<DtvHo>(entity =>
            {
                entity.ToTable("dtv_ho", "dongthucvat");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedBy).HasColumnName("created_by");

                entity.Property(e => e.IdDtvBo).HasColumnName("id_dtv_bo");

                entity.Property(e => e.Loai).HasColumnName("loai");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("name");

                entity.Property(e => e.NameLatinh)
                    .HasMaxLength(255)
                    .HasColumnName("name_latinh");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");

                entity.Property(e => e.UpdatedBy).HasColumnName("updated_by");
            });

            modelBuilder.Entity<DtvLoai>(entity =>
            {
                entity.ToTable("dtv_loai", "dongthucvat");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedBy).HasColumnName("created_by");

                entity.Property(e => e.IdDtvHo).HasColumnName("id_dtv_ho");

                entity.Property(e => e.Loai).HasColumnName("loai");

                entity.Property(e => e.MucDoBaoTonIucn).HasColumnName("muc_do_bao_ton_iucn");

                entity.Property(e => e.MucDoBaoTonNd64cp).HasColumnName("muc_do_bao_ton_nd64cp");

                entity.Property(e => e.MucDoBaoTonNdcp).HasColumnName("muc_do_bao_ton_ndcp");

                entity.Property(e => e.MucDoBaoTonSdvn).HasColumnName("muc_do_bao_ton_sdvn");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("name");

                entity.Property(e => e.NameLatinh)
                    .HasMaxLength(255)
                    .HasColumnName("name_latinh");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");

                entity.Property(e => e.UpdatedBy).HasColumnName("updated_by");
            });
            modelBuilder.Entity<DtvLoai_VQG>(entity =>
            {
                entity.ToTable("dtv_loaiVqg", "dongthucvat");
                entity.Property(e => e.Id).HasColumnName("id");
                entity.Property(e => e.Loai).HasColumnName("loai");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");
                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");
                entity.Property(e => e.CreatedBy).HasColumnName("created_by");
                entity.Property(e => e.UpdatedBy).HasColumnName("updated_by");
                entity.Property(e => e.TenKhac)
                    .HasMaxLength(255)
                    .HasColumnName("ten_khac");
                entity.Property(e => e.NguonTaiLieu)
                    .HasMaxLength(255)
                    .HasColumnName("nguon_tai_lieu");
                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.PhanBo)
                    .HasMaxLength(255)
                    .HasColumnName("phan_bo");
                entity.Property(e => e.DacDiem).HasColumnName("dac_diem");

                entity.Property(e => e.FileDinhKem).HasColumnName("file_dinh_kem");

                entity.Property(e => e.GiaTriSuDung).HasColumnName("gia_tri_su_dung");
            });
            modelBuilder.Entity<DtvLop>(entity =>
            {
                entity.ToTable("dtv_lop", "dongthucvat");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedBy).HasColumnName("created_by");

                entity.Property(e => e.IdDtvNganh).HasColumnName("id_dtv_nganh");

                entity.Property(e => e.Loai).HasColumnName("loai");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("name");

                entity.Property(e => e.NameLatinh)
                    .HasMaxLength(255)
                    .HasColumnName("name_latinh");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");

                entity.Property(e => e.UpdatedBy).HasColumnName("updated_by");
            });

            modelBuilder.Entity<DtvNganh>(entity =>
            {
                entity.ToTable("dtv_nganh", "dongthucvat");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedBy).HasColumnName("created_by");

                entity.Property(e => e.Loai).HasColumnName("loai");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("name");

                entity.Property(e => e.NameLatinh)
                    .HasMaxLength(255)
                    .HasColumnName("name_latinh");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");

                entity.Property(e => e.UpdatedBy).HasColumnName("updated_by");
            });







            modelBuilder.Entity<News>(entity =>
            {
                entity.ToTable("news", "dongthucvat");

                entity.HasIndex(e => e.NewsCatId, "id_cat");

                entity.HasIndex(e => e.IsHot, "is_hot");

                entity.HasIndex(e => e.Alias, "news$alias")
                    .IsUnique();

                entity.HasIndex(e => e.Status, "status");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Alias)
                    .HasMaxLength(255)
                    .HasColumnName("alias");

                entity.Property(e => e.Author)
                    .HasMaxLength(200)
                    .HasColumnName("author");

                entity.Property(e => e.ContentSeo).HasColumnName("content_seo");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.Description).HasColumnName("description");

                entity.Property(e => e.IdRelated).HasColumnName("id_related");

                entity.Property(e => e.Image)
                    .HasMaxLength(255)
                    .HasColumnName("image");

                entity.Property(e => e.IsHot)
                    .HasColumnName("is_hot")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.IsSystem)
                    .HasColumnName("is_system")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.KeySeo)
                    .HasMaxLength(255)
                    .HasColumnName("key_seo");

                entity.Property(e => e.Language)
                    .HasMaxLength(50)
                    .HasColumnName("language");

                entity.Property(e => e.Name)
                    .HasMaxLength(255)
                    .HasColumnName("name");

                entity.Property(e => e.NewsCatId)
                    .HasColumnName("news_cat_id")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PostAt)
                    .HasColumnType("datetime")
                    .HasColumnName("post_at");

                entity.Property(e => e.RootNewsCatId).HasColumnName("root_news_cat_id");

                entity.Property(e => e.ShortDescription).HasColumnName("short_description");

                entity.Property(e => e.SortOrder)
                    .HasColumnName("sort_order")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Source)
                    .HasMaxLength(200)
                    .HasColumnName("source");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TitleSeo)
                    .HasMaxLength(300)
                    .HasColumnName("title_seo");

                entity.Property(e => e.TotalView)
                    .HasColumnName("total_view")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");
            });

            modelBuilder.Entity<NewsCat>(entity =>
            {
                entity.ToTable("news_cat", "dongthucvat");

                entity.HasIndex(e => e.Alias, "news_cat$idx_alias")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Alias)
                    .HasMaxLength(255)
                    .HasColumnName("alias");

                entity.Property(e => e.ContentSeo).HasColumnName("content_seo");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Description).HasColumnName("description");

                entity.Property(e => e.IdRelated).HasColumnName("id_related");

                entity.Property(e => e.Image)
                    .HasMaxLength(255)
                    .HasColumnName("image");

                entity.Property(e => e.KeySeo).HasColumnName("key_seo");

                entity.Property(e => e.Language)
                    .HasMaxLength(50)
                    .HasColumnName("language");

                entity.Property(e => e.Level).HasColumnName("level");

                entity.Property(e => e.Name)
                    .HasMaxLength(300)
                    .HasColumnName("name");

                entity.Property(e => e.ParentId).HasColumnName("parent_id");

                entity.Property(e => e.Path)
                    .HasMaxLength(100)
                    .HasColumnName("path");

                entity.Property(e => e.SortOrder).HasColumnName("sort_order");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.TitleSeo)
                    .HasMaxLength(255)
                    .HasColumnName("title_seo");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at")
                    .HasDefaultValueSql("(getdate())");
            });




            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}