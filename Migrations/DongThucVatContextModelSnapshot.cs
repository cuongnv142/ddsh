// <auto-generated />
using System;
using DongThucVatQuangTri.Models.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DongThucVatQuangTri.Migrations
{
    [DbContext(typeof(DongThucVatContext))]
    partial class DongThucVatContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.AppRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CitiesDistrictId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CitiesId")
                        .HasColumnType("bigint");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("IsAdmin")
                        .HasColumnType("smallint");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSigninedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.AuthAssignment", b =>
                {
                    b.Property<string>("ItemName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("item_name");

                    b.Property<string>("UserId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("user_id");

                    b.Property<int?>("CreatedAt")
                        .HasColumnType("int")
                        .HasColumnName("created_at");

                    b.HasKey("ItemName", "UserId")
                        .HasName("PK_auth_assignment_item_name");

                    b.ToTable("auth_assignment", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.AuthItem", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("name");

                    b.Property<int?>("CreatedAt")
                        .HasColumnType("int")
                        .HasColumnName("created_at");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("RuleName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("rule_name");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<int?>("UpdatedAt")
                        .HasColumnType("int")
                        .HasColumnName("updated_at");

                    b.HasKey("Name")
                        .HasName("PK_auth_item_name");

                    b.HasIndex(new[] { "RuleName" }, "rule_name");

                    b.HasIndex(new[] { "Type" }, "type");

                    b.ToTable("auth_item", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.AuthItemChild", b =>
                {
                    b.Property<string>("Parent")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("parent");

                    b.Property<string>("Child")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("child");

                    b.HasKey("Parent", "Child")
                        .HasName("PK_auth_item_child_parent");

                    b.HasIndex(new[] { "Child" }, "child");

                    b.ToTable("auth_item_child", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.AuthRule", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("name");

                    b.Property<int?>("CreatedAt")
                        .HasColumnType("int")
                        .HasColumnName("created_at");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("data");

                    b.Property<int?>("UpdatedAt")
                        .HasColumnType("int")
                        .HasColumnName("updated_at");

                    b.HasKey("Name")
                        .HasName("PK_auth_rule_name");

                    b.ToTable("auth_rule", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.Banner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("BannerCatId")
                        .HasColumnType("int")
                        .HasColumnName("banner_cat_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<short?>("Height")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("height")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("IdRelated")
                        .HasColumnType("int")
                        .HasColumnName("id_related");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("language");

                    b.Property<string>("Link")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("link");

                    b.Property<string>("Multitext")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("multitext");

                    b.Property<string>("Name")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("name");

                    b.Property<int?>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sort_order")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Src")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("src");

                    b.Property<string>("SrcMobile")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("src_mobile");

                    b.Property<short?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((0))");

                    b.Property<short?>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("type")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<short?>("Width")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("width")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.ToTable("banner", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.BannerCat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("IdRelated")
                        .HasColumnType("int")
                        .HasColumnName("id_related");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("language");

                    b.Property<short>("Level")
                        .HasColumnType("smallint")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("name");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<string>("Path")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("path");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("sort_order");

                    b.Property<short?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("banner_cat", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.Boxpage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("BoxpageCatId")
                        .HasColumnType("int")
                        .HasColumnName("boxpage_cat_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("IdRelated")
                        .HasColumnType("int")
                        .HasColumnName("id_related");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("language");

                    b.Property<string>("Link")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("link");

                    b.Property<string>("Multitext")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("multitext");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("short_description");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("sort_order");

                    b.Property<string>("Src")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("src");

                    b.Property<short>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.Property<string>("SubName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sub_name");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("boxpage", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.BoxpageCat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("IdRelated")
                        .HasColumnType("int")
                        .HasColumnName("id_related");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("language");

                    b.Property<short>("Level")
                        .HasColumnType("smallint")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<string>("Path")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("path");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("sort_order");

                    b.Property<short?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("boxpage_cat", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.BoxpageMedia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("BoxpageId")
                        .HasColumnType("int")
                        .HasColumnName("boxpage_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<short?>("IsDefault")
                        .HasColumnType("smallint")
                        .HasColumnName("is_default");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Path")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("path");

                    b.Property<string>("PathVideo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("path_video");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("sort_order");

                    b.Property<short?>("SubType")
                        .HasColumnType("smallint")
                        .HasColumnName("sub_type");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("boxpage_media", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.CitiesDistrict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("alias");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<int?>("CrawlId")
                        .HasColumnType("int")
                        .HasColumnName("crawl_id");

                    b.Property<short>("IsHome")
                        .HasColumnType("smallint")
                        .HasColumnName("is_home");

                    b.Property<string>("Lat")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lat");

                    b.Property<string>("Lng")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lng");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("sort_order");

                    b.Property<int>("SortOrderFooter")
                        .HasColumnType("int")
                        .HasColumnName("sort_order_footer");

                    b.Property<short>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CrawlId" }, "id_crawl");

                    b.HasIndex(new[] { "ParentId" }, "id_parent");

                    b.HasIndex(new[] { "Type" }, "type")
                        .HasDatabaseName("type1");

                    b.ToTable("cities_district", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.CitiesStreet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("alias");

                    b.Property<int?>("CrawlId")
                        .HasColumnType("int")
                        .HasColumnName("crawl_id");

                    b.Property<int?>("IdCity")
                        .HasColumnType("int")
                        .HasColumnName("id_city");

                    b.Property<int?>("IdDistrict")
                        .HasColumnType("int")
                        .HasColumnName("id_district");

                    b.Property<string>("Lat")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lat");

                    b.Property<string>("Lng")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lng");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("sort_order");

                    b.Property<short>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdCity", "IdDistrict" }, "id_city");

                    b.HasIndex(new[] { "CrawlId" }, "id_crawl")
                        .HasDatabaseName("id_crawl1");

                    b.HasIndex(new[] { "Type" }, "type")
                        .HasDatabaseName("type2");

                    b.ToTable("cities_street", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.CitiesWard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("alias");

                    b.Property<int?>("CitiesDistrictId")
                        .HasColumnType("int")
                        .HasColumnName("cities_district_id");

                    b.Property<int?>("CitiesId")
                        .HasColumnType("int")
                        .HasColumnName("cities_id");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<int?>("CrawlId")
                        .HasColumnType("int")
                        .HasColumnName("crawl_id");

                    b.Property<string>("Lat")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lat");

                    b.Property<string>("Lng")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lng");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("sort_order");

                    b.Property<short>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Alias" }, "alias");

                    b.HasIndex(new[] { "CitiesId" }, "id_city")
                        .HasDatabaseName("id_city1");

                    b.HasIndex(new[] { "CitiesDistrictId" }, "id_district");

                    b.HasIndex(new[] { "Type" }, "type")
                        .HasDatabaseName("type3");

                    b.ToTable("cities_ward", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.DtvBo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int?>("IdDtvLop")
                        .HasColumnType("int")
                        .HasColumnName("id_dtv_lop");

                    b.Property<short?>("Loai")
                        .HasColumnType("smallint")
                        .HasColumnName("loai");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("NameLatinh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name_latinh");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("dtv_bo", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.DtvHo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int?>("IdDtvBo")
                        .HasColumnType("int")
                        .HasColumnName("id_dtv_bo");

                    b.Property<short?>("Loai")
                        .HasColumnType("smallint")
                        .HasColumnName("loai");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("NameLatinh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name_latinh");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("dtv_ho", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.DtvLoai", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("DacDiem")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("dac_diem");

                    b.Property<string>("FileDinhKem")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("file_dinh_kem");

                    b.Property<string>("GiaTriSuDung")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gia_tri_su_dung");

                    b.Property<int?>("IdDtvHo")
                        .HasColumnType("int")
                        .HasColumnName("id_dtv_ho");

                    b.Property<short?>("Loai")
                        .HasColumnType("smallint")
                        .HasColumnName("loai");

                    b.Property<short?>("MucDoBaoTonIucn")
                        .HasColumnType("smallint")
                        .HasColumnName("muc_do_bao_ton_iucn");

                    b.Property<short?>("MucDoBaoTonNd64cp")
                        .HasColumnType("smallint")
                        .HasColumnName("muc_do_bao_ton_nd64cp");

                    b.Property<short?>("MucDoBaoTonNdcp")
                        .HasColumnType("smallint")
                        .HasColumnName("muc_do_bao_ton_ndcp");

                    b.Property<short?>("MucDoBaoTonSdvn")
                        .HasColumnType("smallint")
                        .HasColumnName("muc_do_bao_ton_sdvn");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("NameLatinh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name_latinh");

                    b.Property<string>("NguonTaiLieu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nguon_tai_lieu");

                    b.Property<string>("PhanBo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("phan_bo");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.Property<string>("TenKhac")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ten_khac");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("dtv_loai", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.DtvLop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int?>("IdDtvNganh")
                        .HasColumnType("int")
                        .HasColumnName("id_dtv_nganh");

                    b.Property<short?>("Loai")
                        .HasColumnType("smallint")
                        .HasColumnName("loai");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("NameLatinh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name_latinh");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("dtv_lop", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.DtvNganh", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<short?>("Loai")
                        .HasColumnType("smallint")
                        .HasColumnName("loai");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("NameLatinh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name_latinh");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("dtv_nganh", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.EmailLetter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("language");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("email_letter", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.ImageGeneral", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int?>("IdDir")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_dir")
                        .HasDefaultValueSql("((0))");

                    b.Property<short>("Mode")
                        .HasColumnType("smallint")
                        .HasColumnName("mode");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("ObjectId")
                        .HasColumnType("int")
                        .HasColumnName("object_id");

                    b.Property<short>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<short>("Type")
                        .HasColumnType("smallint")
                        .HasColumnName("type");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("image_general", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.ImageGeneralDirectory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("name");

                    b.Property<int?>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("parent_id")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.ToTable("image_general_directory", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("category");

                    b.Property<int?>("Level")
                        .HasColumnType("int")
                        .HasColumnName("level");

                    b.Property<double?>("LogTime")
                        .HasColumnType("float")
                        .HasColumnName("log_time");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prefix");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Category" }, "idx_log_category");

                    b.HasIndex(new[] { "Level" }, "idx_log_level");

                    b.ToTable("log", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.LogAction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("action");

                    b.Property<string>("Controller")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("controller");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Ip")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("ip");

                    b.Property<string>("Module")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("module");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("log_action", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.LogActionAdmin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("action");

                    b.Property<string>("AfterData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("after_data");

                    b.Property<string>("BeforData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("befor_data");

                    b.Property<string>("Controller")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("controller");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdObject")
                        .HasColumnType("int")
                        .HasColumnName("id_object");

                    b.Property<string>("Ip")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("ip");

                    b.Property<string>("Module")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("module");

                    b.Property<string>("NameObject")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name_object");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("log_action_admin", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.LogIpLogin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Ip")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("ip");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("username");

                    b.Property<long>("Vcount")
                        .HasColumnType("bigint")
                        .HasColumnName("vcount");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Ip" }, "ip");

                    b.ToTable("log_ip_login", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.LogSubscribeError", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ErrMessage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("err_message");

                    b.Property<int?>("ErrorCode")
                        .HasColumnType("int")
                        .HasColumnName("error_code");

                    b.Property<string>("Ip")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ip");

                    b.HasKey("Id");

                    b.ToTable("log_subscribe_error", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.Menus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("GenUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("gen_url");

                    b.Property<int?>("IdObject")
                        .HasColumnType("int")
                        .HasColumnName("id_object");

                    b.Property<int?>("IdRelated")
                        .HasColumnType("int")
                        .HasColumnName("id_related");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("ImageHover")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image_hover");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("language");

                    b.Property<short?>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("level")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LinkMenu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_menu");

                    b.Property<int?>("MenuGroupId")
                        .HasColumnType("int")
                        .HasColumnName("menu_group_id");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("parent_id")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Path")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("path");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("sort_order");

                    b.Property<short?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((0))");

                    b.Property<short?>("TypeMenu")
                        .HasColumnType("smallint")
                        .HasColumnName("type_menu");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("menus", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.News", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("alias");

                    b.Property<string>("Author")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("author");

                    b.Property<string>("ContentSeo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content_seo");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("IdRelated")
                        .HasColumnType("int")
                        .HasColumnName("id_related");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<short?>("IsHot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("is_hot")
                        .HasDefaultValueSql("((0))");

                    b.Property<short?>("IsSystem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("is_system")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("KeySeo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("key_seo");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("language");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("NewsCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("news_cat_id")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("PostAt")
                        .HasColumnType("datetime")
                        .HasColumnName("post_at");

                    b.Property<int?>("RootNewsCatId")
                        .HasColumnType("int")
                        .HasColumnName("root_news_cat_id");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("short_description");

                    b.Property<int?>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sort_order")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Source")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("source");

                    b.Property<short?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("TitleSeo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("title_seo");

                    b.Property<int?>("TotalView")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("total_view")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NewsCatId" }, "id_cat");

                    b.HasIndex(new[] { "IsHot" }, "is_hot");

                    b.HasIndex(new[] { "Alias" }, "news$alias")
                        .IsUnique()
                        .HasFilter("[alias] IS NOT NULL");

                    b.HasIndex(new[] { "Status" }, "status");

                    b.ToTable("news", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.NewsCat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("alias");

                    b.Property<string>("ContentSeo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content_seo");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("IdRelated")
                        .HasColumnType("int")
                        .HasColumnName("id_related");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("KeySeo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("key_seo");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("language");

                    b.Property<short>("Level")
                        .HasColumnType("smallint")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("name");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.Property<string>("Path")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("path");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("sort_order");

                    b.Property<short>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.Property<string>("TitleSeo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title_seo");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Alias" }, "news_cat$idx_alias")
                        .IsUnique()
                        .HasFilter("[alias] IS NOT NULL");

                    b.ToTable("news_cat", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.NewsCatRel", b =>
                {
                    b.Property<long>("NewsId")
                        .HasColumnType("bigint")
                        .HasColumnName("news_id");

                    b.Property<long>("NewsCatId")
                        .HasColumnType("bigint")
                        .HasColumnName("news_cat_id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.HasKey("NewsId", "NewsCatId")
                        .HasName("PK_news_cat_rel_news_id");

                    b.ToTable("news_cat_rel", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.RoutePage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("route");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "route_page$name")
                        .IsUnique();

                    b.HasIndex(new[] { "Route" }, "route_page$route")
                        .IsUnique();

                    b.ToTable("route_page", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.SeoPage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("FaceDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("face_description");

                    b.Property<string>("FaceImage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("face_image");

                    b.Property<string>("FaceTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("face_title");

                    b.Property<int?>("IdRelated")
                        .HasColumnType("int")
                        .HasColumnName("id_related");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("language");

                    b.Property<string>("Multitext")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("multitext");

                    b.Property<string>("PageDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("page_description");

                    b.Property<string>("PageKeywords")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("page_keywords");

                    b.Property<string>("PageTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("page_title");

                    b.Property<int>("RouteId")
                        .HasColumnType("int")
                        .HasColumnName("route_id");

                    b.Property<string>("RouteName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("route_name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RouteId", "Language" }, "seo_page$unique")
                        .IsUnique()
                        .HasFilter("[language] IS NOT NULL");

                    b.ToTable("seo_page", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.SiteContact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("EmbedScriptBodyBegin")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("embed_script_body_begin");

                    b.Property<string>("EmbedScriptBodyEnd")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("embed_script_body_end");

                    b.Property<string>("EmbedScriptHead")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("embed_script_head");

                    b.Property<string>("Fax")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fax");

                    b.Property<string>("Hotline")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("hotline");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("language");

                    b.Property<string>("LinkFace")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_face");

                    b.Property<string>("LinkFavicon")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_favicon");

                    b.Property<string>("LinkInsta")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_insta");

                    b.Property<string>("LinkLogo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_logo");

                    b.Property<string>("LinkLogoFooter")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_logo_footer");

                    b.Property<string>("LinkMap")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("link_map");

                    b.Property<string>("LinkMessenger")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_messenger");

                    b.Property<string>("LinkTwitter")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_twitter");

                    b.Property<string>("LinkYoutube")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_youtube");

                    b.Property<string>("LinkZalo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("link_zalo");

                    b.Property<string>("Multitext")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("multitext");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Language" }, "site_contact$language_unique")
                        .IsUnique()
                        .HasFilter("[language] IS NOT NULL");

                    b.ToTable("site_contact", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.Subscribe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cookies")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("cookies");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("File")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("file");

                    b.Property<string>("Ip")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ip");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<int?>("ObjectId")
                        .HasColumnType("int")
                        .HasColumnName("object_id");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("phone");

                    b.Property<string>("Phongban")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("phongban");

                    b.Property<short?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((0))");

                    b.Property<short?>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("type")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("UtmCampaign")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("utm_campaign");

                    b.Property<string>("UtmContent")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("utm_content");

                    b.Property<string>("UtmMedium")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("utm_medium");

                    b.Property<string>("UtmReferrer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("utm_referrer");

                    b.Property<string>("UtmSource")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("utm_source");

                    b.Property<string>("UtmTerm")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("utm_term");

                    b.HasKey("Id");

                    b.ToTable("subscribe", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("DesSeobox")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("des_seobox");

                    b.Property<short?>("FeatureTag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("feature_tag")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PageDescription")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)")
                        .HasColumnName("page_description");

                    b.Property<string>("PageTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("page_title");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.Property<string>("Tag1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tag");

                    b.Property<string>("TitleSeobox")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title_seobox");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Status", "FeatureTag" }, "status")
                        .HasDatabaseName("status1");

                    b.HasIndex(new[] { "Status" }, "status_2");

                    b.HasIndex(new[] { "Tag1" }, "tag$tag")
                        .IsUnique()
                        .HasFilter("[tag] IS NOT NULL");

                    b.ToTable("tag", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.TagRel", b =>
                {
                    b.Property<long>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnName("tag_id");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("object_id");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint")
                        .HasColumnName("type");

                    b.Property<int?>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sort_order")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("TagId", "ObjectId", "Type")
                        .HasName("PK_tag_rel_tag_id");

                    b.ToTable("tag_rel", "dongthucvat");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("avatar");

                    b.Property<long>("CitiesDistrictId")
                        .HasColumnType("bigint")
                        .HasColumnName("cities_district_id");

                    b.Property<long>("CitiesId")
                        .HasColumnType("bigint")
                        .HasColumnName("cities_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("dob");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("gender");

                    b.Property<short>("IsAdmin")
                        .HasColumnType("smallint")
                        .HasColumnName("is_admin");

                    b.Property<DateTime?>("LastSigninedTime")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("last_signined_time");

                    b.Property<string>("Password")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("phone");

                    b.Property<string>("Role")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("role");

                    b.Property<string>("SecretKey")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("secret_key");

                    b.Property<short>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CitiesDistrictId" }, "FK_acc");

                    b.HasIndex(new[] { "CitiesId" }, "FK_acc__city_id");

                    b.HasIndex(new[] { "Email" }, "index_email");

                    b.HasIndex(new[] { "Phone" }, "index_phone");

                    b.HasIndex(new[] { "Status" }, "status")
                        .HasDatabaseName("status2");

                    b.HasIndex(new[] { "Email" }, "user$email")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.ToTable("user", "dongthucvat");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "UserId");

                    b.ToTable("AppUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens", (string)null);
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.AuthAssignment", b =>
                {
                    b.HasOne("DongThucVatQuangTri.Models.Entities.AuthItem", "ItemNameNavigation")
                        .WithMany("AuthAssignment")
                        .HasForeignKey("ItemName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("auth_assignment$auth_assignment_ibfk_1");

                    b.Navigation("ItemNameNavigation");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.AuthItem", b =>
                {
                    b.HasOne("DongThucVatQuangTri.Models.Entities.AuthRule", "RuleNameNavigation")
                        .WithMany("AuthItem")
                        .HasForeignKey("RuleName")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("auth_item$auth_item_ibfk_1");

                    b.Navigation("RuleNameNavigation");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.AuthItemChild", b =>
                {
                    b.HasOne("DongThucVatQuangTri.Models.Entities.AuthItem", "ParentNavigation")
                        .WithMany("AuthItemChild")
                        .HasForeignKey("Parent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("auth_item_child$auth_item_child_ibfk_1");

                    b.Navigation("ParentNavigation");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.AuthItem", b =>
                {
                    b.Navigation("AuthAssignment");

                    b.Navigation("AuthItemChild");
                });

            modelBuilder.Entity("DongThucVatQuangTri.Models.Entities.AuthRule", b =>
                {
                    b.Navigation("AuthItem");
                });
#pragma warning restore 612, 618
        }
    }
}
