@using DongThucVatQuangTri.Applications.Common;
@model PageResultBase
@{
    var urlTemplate = Url.Action() + "?PageIndex={0}";
    var request = ViewContext.HttpContext.Request;
    foreach (var key in request.Query.Keys)
    {
        if (key == "PageIndex")
        {
            continue;
        }
        if (request.Query[key].Count > 1)
        {
            foreach (var item in (string[])request.Query[key])
            {
                urlTemplate += "&" + key + "=" + item;
            }
        }
        else
        {
            urlTemplate += "&" + key + "=" + request.Query[key];
        }
    }

    var startIndex = Math.Max(Model.PageIndex - 5, 1);
    var finishIndex = Math.Min(Model.PageIndex + 5, Model.PageCount);
}
<style>
    /* ul,li{
        height: auto !important;
        width: auto !important;
    } */
    /* Tùy chỉnh màu sắc cho nút phân trang */
    .pagination .page-link {
        position: relative;
        display: block;
        color: #0d6efd !important;
        padding: 0.375rem 0.75rem !important;
        text-decoration: none;
        background-color: #fff;
        border: 1px solid #dee2e6;
        transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

        /* Tùy chỉnh màu sắc cho nút phân trang khi được hover hoặc active */
        .pagination .page-link:hover,
        .pagination .page-link:focus {
            z-index: 2;
            color: #0a58ca !important;
            background-color: #e9ecef;
            border-color: #dee2e6;
        }

    /* Tùy chỉnh màu sắc cho trang hiện tại */
    .pagination .page-item.active .page-link {
        z-index: 3;
        color: #fff !important;
        background-color: #0d6efd;
        border-color: #0d6efd;
    }

    /* Tùy chỉnh màu sắc cho trang trước và sau */
    .pagination .page-item.disabled .page-link {
        background-color: #f2f2f2;
        border-color: #f2f2f2;
        color: #333;
    }
</style>
@if (Model.PageCount > 1)
{
    <ul class="pagination justify-content-center m-2">
        @if (Model.PageIndex != startIndex)
        {
            <li class="page-item">
                <a class="page-link" title="1" href="@urlTemplate.Replace("{0}", "1")">Đầu</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@urlTemplate.Replace("{0}", (Model.PageIndex-1).ToString())">Trước</a>
            </li>
        }
        @for (var i = startIndex; i <= finishIndex; i++)
        {
            if (i == Model.PageIndex)
            {
                <li class="page-item active">
                    <a class="page-link" href="#">@i <span class="sr-only">(current)</span></a>
                </li>
            }
            else
            {
                
                <li class="page-item"><a class="page-link" title="Trang @i.ToString()" href="@urlTemplate.Replace("{0}", i.ToString())">@i</a></li>
            }
        }
        @if (Model.PageIndex != finishIndex)
        {
            <li class="page-item">
                <a class="page-link" title="@Model.PageCount.ToString()" href="@urlTemplate.Replace("{0}", (Model.PageIndex+1).ToString())">Sau</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@urlTemplate.Replace("{0}", Model.PageCount.ToString())">Cuối</a>
            </li>
        }
    </ul>
}